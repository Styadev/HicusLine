*hicusline*			A highly customizable statusline in (neo)vim.

Version: 1.0.0
Author: Styadev's everyone
License: MIT

==============================================================================
CONTENTS						*hicusline-contents*

Introduction					|hicusline-introduction|
Install						|hicusline-install|
Configuration					|hicusline-configuration|
Command						|hicusline-command|

==============================================================================
INTRODUCTION						*hicusline-introduction*

HicusLine is a highly customizable statusline in (neo)vim.This plug provides
user with the highly customizable ability to make the (neo)vim statusline.

==============================================================================
INSTALL							*hicusline-install*

To install with vim-plug,you should add :

	Plug 'Styadev/HicusLine'

in .vimrc(for vim) or init.vim(for neovim).

==============================================================================
CONFIGURATION						*hicusline-configuration*

First of all,you should add:

	set laststatus=2 " You can set other number

in .vimrc(for vim) or init.vim(for neovim).

*g:HicusLineEnabled* {value}(Default: 0)

If {value} is 1,you can use HicusLine.Otherwise can't.

e.g.:

	let g:HicusLineEnabled = 1

*g:HicusLineMode* {value}(Default: None)

The {value} is the mode content you want it to show.If you don't set it,you
will can't use 'mode' option.
e.g.:

	let g:HicusLineMode = {
	      \'n':      'NORMAL',
	      \'i':      'INSERT',
	      \'R':      'REPLACE',
	      \'v':      'VISUAL',
	      \'V':      'L-VISU',
	      \"\<C-v>": 'B-VISU',
	      \'c':      'COMMAND',
	      \'s':      'SELECT',
	      \'S':      'L-SELE',
	      \"\<C-s>": 'B-SELE',
	      \'t':      'TERMINAL',
	\}

*g:HicusColor* {value}(Default: None)

The {value} is a dictionary.You can set the highlight color in this
dictionary.
e.g.:

	let g:HicusColor = {
	      \'StatusLine':    [ 'none' ,'#8BE9FD', '#44475A', ],
	      \'double':        [ 'bold' ,'#282A36', '#BD93F9', ],
	      \'infos':         [ 'none', '#FFFFFF', '#6272A4', ],
	      \'ErrorStatus':   [ 'none', '#FF0033', '#44475A', ],
	      \'WarningStatus': [ 'none', '#FFCC00', '#44475A', ],
	\}

*g:HicusColorSetWay* {value}(Default: 1)

The {value} is a number.You can change the way to set the highlight group by
setting {value}.If it is 1,you should use `g:HicusColor` to set highlight.If it
is 0,you should set highlight by using `:highlight`.

*g:HicusLine* {value}(Default: None)

The {value} is a dictionary.You can set your own statusline by it.If you don't
set it,the statusline will be the vim's default.

These are the options can write in {value}:

'template': 'template' " Set the template and theme for statusline

You can Set your own template and put it in template dirctory.

'active': { 'left': [...], 'right': [...] } " Set the statusline.

'left': [ 'option', (...) ] " Set the options on left statusline

'right': [ 'option', (...) ] "Set the options on right statusline

These options can write in 'left' and 'right':

	%#Highlight# - Set the Highlight group.

	%{function} - Set the function on status line.

	0 - Show the default highlight group.

	'truncate' - Set where to truncate line if too long.

	'space' - Show a space in statusline.

	'spell' - Show the spell status.

	'filename' - Show the current filename.

	'fileformat' - Show the current fileformat.

	'fileencoding' - Show the File-content encoding for the current buffer.

	'bufferfilepath' - Show the path to the file in the buffer.

	'filepath' - Show the current file's whole path.

	'buffernumber' - Show the current buffer's number.

	'chardecimal' - Show the character under the cursor in decimal.

	'charhexadecimal' - Show the character under the cursor in hexadecimal.

	'printernumber' - Show the printer page number.

	'linenumber' - Show the current line number.

	'bufferlinesnumber' - Show the all lines in current buffer.

	'columnnumber' - Show the current column number.

	'overdecimal' - Show the character offset in decimal from the beginning 
	of the file.

	'overhexadecimal' - Show the character offset in hexadecimal from the
	beginning of the file.

	'virtualcolumn' - Show the current virtual column number.

	'virtualspecial' - Show the current virtual column number unless it is
	same as 'columnnumber'.

	'linepercentage' - Show the percentage of the current line in the
	buffer.

	'windowpercentage' - Show current percentage of the current window in
	the buffer.

	'argumentlist' - Show the argument list status in default title.If the
	argument file count is zero or one,it will be empty.

These options need to set it type.if you don't set it,it will be the default
type.(Default 1)

	'modified[1-2]' - Show the modified flag if the current file modified.If
	the type is 1, it will be '[+]'.If the type is 2,it will be '+'.

	'readonly[1-2]' - Show the readonly flag if the current file is readonly,
	If the type is 1,it will be '[RO]'.If the type is 2,it will be 'RO'.

	'helpbuffer[1-2]' - Show the help buffer flag.If the type is 1,it will be
	'[Help]'.If the type is 2,it will be 'HLP'.

	'preview[1-2]' - Show the preview window flag.If the type is 1,it will be
	'[Preview]'.If the type is 2,it will be 'PRV'.

	'filetype[1-2]' - Show the type of the current file.If the type is 1,it
	will be '[filetype]'.If the type is 2,it will be 'filetype'.

Here is an example:

	let g:HicusLine = {
	\   'left': [ 1, 'filename', '%{ReadOnly()}' 2, '|', 'filetype1', ],
	\   'right': [ 1, 'modified1', 0, 'windowpercentage', ],
	\}
	hi User1 guifg=235 gui=bold guibg=NONE
	hi User2 guibg=235
	function! ReadOnly() abort
	    if &readonly || !&modifiable
	        return ''
	    else
	        return '✔'
	        endif
	endfunction

==============================================================================
COMMAND							*hicusline-command*

You should set `let g:HicusLineEnabled = 1` before use these commands.

*:HicusLineEnable*

Turn on HicusLine temporarily.

*:HicusLineDisable*

Turn off HicusLine temporarily.

==============================================================================
vim:tw=78:nosta:noet:sw=4:ts=8:sts=0:ft=help:noet:fen:fdm=marker:
